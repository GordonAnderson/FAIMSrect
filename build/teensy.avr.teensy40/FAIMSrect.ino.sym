
/private/var/folders/7m/87zkz54x1q3b83bfgzmdl4_80000gn/T/arduino/sketches/055649828B8687A69011F8E90BE46EE5/FAIMSrect.ino.elf:     file format elf32-littlearm

SYMBOL TABLE:
60000000 l    d  .text.headers	00000000 .text.headers
60001400 l    d  .text.code	00000000 .text.code
60001c7c l    d  .text.progmem	00000000 .text.progmem
00000000 l    d  .text.itcm	00000000 .text.itcm
00011230 l    d  .fini	00000000 .fini
00011234 l    d  .ARM.exidx	00000000 .ARM.exidx
20000000 l    d  .data	00000000 .data
200092c0 l    d  .bss	00000000 .bss
20200000 l    d  .bss.dma	00000000 .bss.dma
6001c398 l    d  .text.csf	00000000 .text.csf
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_loclists	00000000 .debug_loclists
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_rnglists	00000000 .debug_rnglists
00000000 l    d  .debug_line_str	00000000 .debug_line_str
00000000 l    df *ABS*	00000000 bootdata.c
00000000 l    df *ABS*	00000000 startup.c
60001400 l     F .text.code	00000012 memory_copy
60001414 l     F .text.code	0000001c memory_clear.constprop.0
60001430 l     F .text.code	00000218 ResetHandler2
00000000 l    df *ABS*	00000000 WireIMXRT.cpp
00000000 l    df *ABS*	00000000 analog.c
2000aff3 l     O .bss	00000001 calibrating
00000000 l    df *ABS*	00000000 tempmon.c
2000abc8 l     O .bss	00000004 s_hotCount
2000abcc l     O .bss	00000004 s_hotTemp
2000abd0 l     O .bss	00000004 s_hot_ROOM
2000abd4 l     O .bss	00000004 s_roomC_hotC
00000000 l    df *ABS*	00000000 usb.c
00005454 l     F .text.itcm	00000088 schedule_transfer
000054dc l     F .text.itcm	00000036 run_callbacks
00005514 l     F .text.itcm	00000098 endpoint0_transmit.constprop.0
2000aa64 l     O .bss	00000008 endpoint0_buffer
2000aa6c l     O .bss	00000004 endpoint0_notify_mask
20009480 l     O .bss	00000008 endpoint0_setupdata
2000aa70 l     O .bss	00000004 endpointN_notify_mask
2000ab8c l     O .bss	00000008 reply_buffer
2000affb l     O .bss	00000001 sof_usage
2000b005 l     O .bss	00000001 usb_reboot_timer
00000000 l    df *ABS*	00000000 crti.o
00000000 l    df *ABS*	00000000 crtn.o
00000000 l    df *ABS*	00000000 crtstuff.c
000000e0 l     F .text.itcm	00000000 register_tm_clones
00000104 l     F .text.itcm	00000000 frame_dummy
2000ab70 l     O .bss	00000000 object.0
60001c70 l     O .text.code	00000000 __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000 FAIMSrect.ino.cpp
00000180 l     F .text.itcm	00000150 systemMonitor() [clone .part.0]
0000087c l     F .text.itcm	0000007c _GLOBAL__sub_I_Version
2000a5d0 l     O .bss	00000004 enableWarning(void*)::count
2000a5ec l     O .bss	000000f4 Restore()::fm
2000ae4c l     O .bss	00000184 timer
00000000 l    df *ABS*	00000000 Serial.cpp
00002bc0 l     F .text.itcm	00000014 _GLOBAL__sub_I_serial
2000a5d4 l     O .bss	00000004 ProcessCommand()::arg1
2000a5d8 l     O .bss	00000004 ProcessCommand()::arg2
2000a5dc l     O .bss	00000004 ProcessCommand()::farg1
2000afef l     O .bss	00000001 ProcessCommand()::state
2000a5e0 l     O .bss	00000004 ProcessCommand()::CmdNum
2000a5e4 l     O .bss	00000004 ProcessCommand()::lstrptr
2000aff0 l     O .bss	00000001 ProcessCommand()::lstrmode
2000aff1 l     O .bss	00000001 ProcessCommand()::delimiter
2000a5e8 l     O .bss	00000004 ProcessCommand()::lstrindex
00000000 l    df *ABS*	00000000 usb_desc.c
20008bc4 l     O .data	00000012 device_descriptor
20008dd8 l     O .data	00000028 microsoft_os_compatible_id_desc
20008e00 l     O .data	00000012 microsoft_os_string_desc
60001e90 l     O .text.progmem	0000000a qualifier_descriptor
00000000 l    df *ABS*	00000000 interrupt.c
00004a54 l     F .text.itcm	00000002 dummy_isr
20000398 l     O .data	00000014 CSWTCH.6
00000000 l    df *ABS*	00000000 Thread.cpp
00000000 l    df *ABS*	00000000 ThreadController.cpp
00000000 l    df *ABS*	00000000 SerialBuffer.cpp
00000000 l    df *ABS*	00000000 EventResponder.cpp
00000000 l    df *ABS*	00000000 HardwareSerial.cpp
00000000 l    df *ABS*	00000000 HardwareSerial1.cpp
2000a524 l     O .bss	00000040 rx_buffer1
2000a564 l     O .bss	00000040 tx_buffer1
200005e8 l     O .data	00000060 UART6_Hardware
00000000 l    df *ABS*	00000000 Print.cpp
00003cc0 l     F .text.itcm	0000007e Print::printNumber(unsigned long, unsigned char, unsigned char) [clone .part.0]
00000000 l    df *ABS*	00000000 WString.cpp
00000000 l    df *ABS*	00000000 clockspeed.c
00000000 l    df *ABS*	00000000 delay.c
00000000 l    df *ABS*	00000000 digital.c
00000000 l    df *ABS*	00000000 eeprom.c
0000464c l     F .text.itcm	0000005c flash_wait
2000aff5 l     O .bss	00000001 initialized
2000ae18 l     O .bss	0000001e sector_index
00000000 l    df *ABS*	00000000 main.cpp
00000000 l    df *ABS*	00000000 memcpy-armv7m.S.o
00000000 l    df *ABS*	00000000 nonstd.c
00000000 l    df *ABS*	00000000 pwm.c
00000000 l    df *ABS*	00000000 usb_inst.cpp
00000000 l    df *ABS*	00000000 usb_serial.c
00005dc0 l     F .text.itcm	00000060 rx_queue_transfer
20200080 l     O .bss.dma	00001000 rx_buffer
00005e20 l     F .text.itcm	000000b4 rx_event
00005ed4 l     F .text.itcm	00000090 usb_serial_flush_callback
20201080 l     O .bss.dma	00002000 txbuffer
00005f64 l     F .text.itcm	000001b8 usb_serial_write.part.0
2000ab98 l     O .bss	00000004 rx_available
2000ab9c l     O .bss	00000010 rx_count
2000aff7 l     O .bss	00000001 rx_head
2000abac l     O .bss	00000010 rx_index
2000abbc l     O .bss	00000009 rx_list
2000afe4 l     O .bss	00000002 rx_packet_size
2000aff8 l     O .bss	00000001 rx_tail
20009300 l     O .bss	00000100 rx_transfer
2000affd l     O .bss	00000001 transmit_previous_timeout
2000afe6 l     O .bss	00000002 tx_available
2000b000 l     O .bss	00000001 tx_head
2000b001 l     O .bss	00000001 tx_noautoflush
2000afe8 l     O .bss	00000002 tx_packet_size
20009400 l     O .bss	00000080 tx_transfer
00000000 l    df *ABS*	00000000 yield.cpp
2000aff2 l     O .bss	00000001 yield::running
00000000 l    df *ABS*	00000000 rtc.c
00000000 l    df *ABS*	00000000 atexit_arm.o
00000000 l    df *ABS*	00000000 _aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 _udivmoddi4.o
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 libc_a-isspace.o
00000000 l    df *ABS*	00000000 libc_a-atol.o
00000000 l    df *ABS*	00000000 libc_a-malloc.o
00000000 l    df *ABS*	00000000 libc_a-mallocr.o
00000000 l    df *ABS*	00000000 libc_a-mlock.o
00000000 l    df *ABS*	00000000 libc_a-realloc.o
00000000 l    df *ABS*	00000000 libc_a-reallocr.o
00000000 l    df *ABS*	00000000 libc_a-strtod.o
00000000 l    df *ABS*	00000000 libc_a-strtol.o
000081dc l     F .text.itcm	00000144 _strtol_l.constprop.0
00000000 l    df *ABS*	00000000 libc_a-sscanf.o
00000000 l    df *ABS*	00000000 libc_a-stdio.o
00000000 l    df *ABS*	00000000 libc_a-findfp.o
00008428 l     F .text.itcm	00000018 stdio_exit_handler
00008440 l     F .text.itcm	00000040 cleanup_stdio
00008480 l     F .text.itcm	000000d4 global_stdio_init.part.0
00000000 l    df *ABS*	00000000 libc_a-fwalk.o
00000000 l    df *ABS*	00000000 libc_a-memmove.o
00000000 l    df *ABS*	00000000 libc_a-memset.o
00000000 l    df *ABS*	00000000 libc_a-strncmp.o
00000000 l    df *ABS*	00000000 libc_a-strncpy.o
00000000 l    df *ABS*	00000000 libc_a-locale.o
00000000 l    df *ABS*	00000000 libc_a-closer.o
00000000 l    df *ABS*	00000000 libc_a-lseekr.o
00000000 l    df *ABS*	00000000 libc_a-cxa_atexit.o
00000000 l    df *ABS*	00000000 libc_a-readr.o
00000000 l    df *ABS*	00000000 libc_a-sbrkr.o
00000000 l    df *ABS*	00000000 libc_a-writer.o
00000000 l    df *ABS*	00000000 libc_a-errno.o
00000000 l    df *ABS*	00000000 libc_a-strcmp.o
00000000 l    df *ABS*	00000000 libc_a-strcpy.o
00000000 l    df *ABS*	00000000 libc_a-init.o
00000000 l    df *ABS*	00000000 libc_a-lock.o
00000000 l    df *ABS*	00000000 libc_a-strlen.o
00000000 l    df *ABS*	00000000 libc_a-__atexit.o
00000000 l    df *ABS*	00000000 libm_a-s_nan.o
00000000 l    df *ABS*	00000000 libm_a-sf_nan.o
00000000 l    df *ABS*	00000000 libc_a-freer.o
00000000 l    df *ABS*	00000000 libc_a-gdtoa-gethex.o
000091b0 l     F .text.itcm	000000a4 rshift
00000000 l    df *ABS*	00000000 libc_a-gdtoa-hexnan.o
00000000 l    df *ABS*	00000000 libc_a-mbtowc_r.o
00000000 l    df *ABS*	00000000 libc_a-svfprintf.o
00000000 l    df *ABS*	00000000 libc_a-svfscanf.o
00000000 l    df *ABS*	00000000 libc_a-mprec.o
00000000 l    df *ABS*	00000000 libc_a-fclose.o
00000000 l    df *ABS*	00000000 libc_a-sccl.o
00000000 l    df *ABS*	00000000 libc_a-strtoul.o
0000d958 l     F .text.itcm	00000140 _strtoul_l.constprop.0
00000000 l    df *ABS*	00000000 libc_a-fflush.o
00000000 l    df *ABS*	00000000 libc_a-sprintf.o
00000000 l    df *ABS*	00000000 libc_a-wctomb_r.o
00000000 l    df *ABS*	00000000 libc_a-stpncpy.o
00000000 l    df *ABS*	00000000 libc_a-localeconv.o
00000000 l    df *ABS*	00000000 libc_a-strtoll.o
0000dce8 l     F .text.itcm	0000016c _strtoll_l.constprop.0
00000000 l    df *ABS*	00000000 libc_a-strtoull.o
0000de58 l     F .text.itcm	0000019c _strtoull_l.constprop.0
00000000 l    df *ABS*	00000000 libc_a-memchr.o
00000000 l    df *ABS*	00000000 libc_a-mbrtowc.o
00000000 l    df *ABS*	00000000 libc_a-wcrtomb.o
00000000 l    df *ABS*	00000000 libc_a-wcsrtombs.o
00000000 l    df *ABS*	00000000 libc_a-iswspace.o
00000000 l    df *ABS*	00000000 libc_a-iswspace_l.o
00000000 l    df *ABS*	00000000 libm_a-s_frexp.o
00000000 l    df *ABS*	00000000 libc_a-assert.o
00000000 l    df *ABS*	00000000 libc_a-jp2uc.o
0000e240 l     F .text.itcm	00000134 __jp2uc
00000000 l    df *ABS*	00000000 libc_a-callocr.o
00000000 l    df *ABS*	00000000 libc_a-dtoa.o
0000e450 l     F .text.itcm	00000126 quorem
00000000 l    df *ABS*	00000000 libc_a-categories.o
00000000 l    df *ABS*	00000000 libc_a-fiprintf.o
00000000 l    df *ABS*	00000000 libc_a-svfiprintf.o
00000000 l    df *ABS*	00000000 libc_a-svfiscanf.o
00000000 l    df *ABS*	00000000 libc_a-vfiprintf.o
0000f55c l     F .text.itcm	00000076 __sprint_r.part.0
00010560 l     F .text.itcm	00000080 __sbprintf
00000000 l    df *ABS*	00000000 libc_a-ungetc.o
00000000 l    df *ABS*	00000000 libc_a-fvwrite.o
00000000 l    df *ABS*	00000000 libc_a-wsetup.o
00000000 l    df *ABS*	00000000 libc_a-fputwc.o
00000000 l    df *ABS*	00000000 libc_a-wcsnrtombs.o
00000000 l    df *ABS*	00000000 libc_a-makebuf.o
00000000 l    df *ABS*	00000000 libc_a-wbuf.o
00000000 l    df *ABS*	00000000 libc_a-fstatr.o
00000000 l    df *ABS*	00000000 libc_a-isattyr.o
00000000 l    df *ABS*	00000000 _arm_addsubdf3.o
00000000 l    df *ABS*	00000000 _fixdfdi.o
00000000 l    df *ABS*	00000000 _fixunsdfdi.o
00000000 l    df *ABS*	00000000 libc_a-ctype_.o
00000000 l    df *ABS*	00000000 libc_a-impure.o
00000000 l    df *ABS*	00000000 libc_a-__call_atexit.o
00011218 l     F .text.itcm	00000008 ___init_veneer
00011220 l     F .text.itcm	00000008 ___reboot_Teensyduino__veneer
00011228 l     F .text.itcm	00000008 ___ZN7TwoWire5beginEv_veneer
60001c38 l     F .text.code	00000008 __delay_veneer
60001c40 l     F .text.code	00000008 ____libc_init_array_veneer
60001c48 l     F .text.code	00000008 __pwm_init_veneer
60001c50 l     F .text.code	00000008 __usb_init_serialnumber_veneer
60001c58 l     F .text.code	00000008 __memset_veneer
60001c60 l     F .text.code	00000008 __main_veneer
60001c68 l     F .text.code	00000008 __set_arm_clock_veneer
00006344 g     F .text.itcm	00000018 usb_serial_available
2000affe g     O .bss	00000001 triggerEnable
2000949c g     O .bss	00000008 HVmonV
0000d7a4 g     F .text.itcm	00000062 __any_on
00010e0c g     F .text.itcm	00000024 _isatty_r
00008c5c g     F .text.itcm	000000ba strcpy
000016e4 g     F .text.itcm	00000140 CalibrateHVIaux()
60001848 g     F .text.code	00000002 startup_default_late_hook
000088ac g     F .text.itcm	0000002c _lseek_r
00006514  w    F .text.itcm	000000d8 yield
20009488 g     O .bss	00000004 BIASmon
2000afe0 g     O .bss	00000004 usb_timer1_callback
00000318 g     F .text.itcm	0000004c Restore()
60001dac g     O .text.progmem	00000018 usb_string_manufacturer_name_default
0000065c g     F .text.itcm	000000b0 startToggle()
200083ac g     O .data	00000140 Wire1
0001114c g     F .text.itcm	0000005a .hidden __floatdidf
2000abd8 g     O .bss	00000004 savedCV
2000a874 g     O .bss	00000001 __lock___atexit_recursive_mutex
2000a9f0 g     O .bss	00000070 control
0000e0f4 g     F .text.itcm	0000004c _wcrtomb_r
60001670 g     F .text.code	00000034 TwoWire::configSDApin(unsigned char)
00003da8 g     F .text.itcm	0000001c Print::println()
00003030 g     F .text.itcm	000000aa TwoWire::isr()
00008400 g     F .text.itcm	00000020 __sseek
00008554 g     F .text.itcm	0000003c __sinit
00010d30 g     F .text.itcm	000000b0 __swbuf_r
20007ce8 g     O .data	00000004 ACKonlyString1
00003544 g     F .text.itcm	0000001c SerialBuffer::SerialBuffer()
00006ebc g     F .text.itcm	0000000c __malloc_unlock
2000afee g     O .bss	00000001 HardwareSerialIMXRT::s_count_serials_with_serial_events
600017ec g     F .text.code	00000054 analog_init
00000168  w    F .text.itcm	00000018 ThreadController::~ThreadController()
00008128 g     F .text.itcm	0000000c _strtod_r
00003298 g     F .text.itcm	00000030 ThreadController::ThreadController(long)
00004044 g     F .text.itcm	00000058 String::trim()
000046a8 g     F .text.itcm	00000048 eeprom_initialize
20008104 g     O .data	00000004 F_CPU_ACTUAL
00000864 g     F .text.itcm	00000010 Software_Reset()
0000f4a8 g     F .text.itcm	000000b4 _sfread_r
000085f0 g     F .text.itcm	000000f8 memmove
00002390 g     F .text.itcm	0000006c SerialInit()
00002744 g     F .text.itcm	000000d4 GetToken(bool)
0000cd94 g     F .text.itcm	0000004c _Balloc
0001123c g       .ARM.exidx	00000000 __exidx_end
00000150  w    F .text.itcm	00000018 Thread::~Thread()
2000afed g     O .bss	00000001 EventResponder::runningFromYield
20008c58 g     O .data	00000080 isr_table_gpio2
20007838 g     O .data	000000a0 pwm_pin_info
000053f4 g     F .text.itcm	00000060 tempmonGetTemp
00003d40 g     F .text.itcm	00000050 Print::write(unsigned char const*, unsigned int)
2000862c g     O .data	00000004 __atexit_recursive_mutex
00006928 g     F .text.itcm	00000008 atol
00008960 g     F .text.itcm	0000000c __errno
0000321c g     F .text.itcm	00000018 Thread::runned(long)
00003b68 g     F .text.itcm	0000014a HardwareSerialIMXRT::IRQHandler()
60001000 g     O .text.headers	00000020 ImageVectorTable
0000070c g     F .text.itcm	00000084 startScan()
00001428 g     F .text.itcm	000000b4 CalibrateBias()
2000a5ac g     O .bss	00000004 EventResponder::firstInterrupt
00005d44 g     F .text.itcm	00000004 usb_transfer_status
2000a5b4 g     O .bss	0000001c HardwareSerialIMXRT::s_serials_with_serial_events
2000a9ec g     O .bss	00000004 __stdio_exit_handler
00000168  w    F .text.itcm	00000018 ThreadController::~ThreadController()
2000820c g     O .data	00000060 Serial1
20008e2e g     O .data	00000001 analog_write_res
000111a8 g     F .text.itcm	00000030 .hidden __aeabi_d2lz
00005db8  w    F .text.itcm	00000008 usb_serial_class::write(unsigned char const*, unsigned int)
00010de0 g     F .text.itcm	0000002c _fstat_r
20007568 g     O .data	00000280 digital_pin_to_info_PGM
2000aa74 g     O .bss	00000004 errno
60001cf4  w    O .text.progmem	00000050 TwoWire::i2c3_hardware
000083bc g     F .text.itcm	00000004 __seofread
00011238 g       .text.itcm	00000000 _etext
200092c0 g       .bss	00000000 _sbss
2000ab88 g     O .bss	00000004 power
2000adfc g     O .bss	0000001c sdata
000007e4 g     F .text.itcm	0000007c isScanning()
000045b8 g     F .text.itcm	00000024 digitalRead
2000affa g     O .bss	00000001 scanning
2000a4dc g     O .bss	00000004 SelectedACKonlyString
60001e9c g       *ABS*	00000000 _stextload
00001d78 g     F .text.itcm	00000288 loop
0000507c g     F .text.itcm	0000007a flexpwm_init
00004764 g     F .text.itcm	000000ec eepromemu_flash_write
00002140 g     F .text.itcm	00000074 Mute(char*)
00004d24 g     F .text.itcm	000000b4 flexpwmWrite
6000184c g     F .text.code	00000004 startup_debug_reset
00005c08 g     F .text.itcm	00000064 usb_config_rx
00002dd0 g     F .text.itcm	00000100 TwoWire::endTransmission(unsigned char)
2000a5a8 g     O .bss	00000004 EventResponder::lastInterrupt
2000afff g     O .bss	00000001 triggerScan
2000ae3c g     O .bss	00000004 supply
20009494 g     O .bss	00000008 HVmonI
00004b8c g     F .text.itcm	00000134 memcpy
00009820 g     F .text.itcm	000001b0 __hexnan
200092c0 g     O .data	00000000 .hidden __TMC_END__
00009a00 g     F .text.itcm	00001b44 _svfprintf_r
000110d4 g     F .text.itcm	00000022 .hidden __floatsidf
2000ae44 g     O .bss	00000004 systick_millis_count
00003544 g     F .text.itcm	0000001c SerialBuffer::SerialBuffer()
00002d90 g     F .text.itcm	00000040 TwoWire::wait_idle()
00003a88 g     F .text.itcm	000000dc HardwareSerialIMXRT::write9bit(unsigned long)
0000661c g     F .text.itcm	00000000 .hidden __aeabi_uldivmod
000037ac g     F .text.itcm	0000029c HardwareSerialIMXRT::begin(unsigned long, unsigned short)
200094a4 g     O .bss	00001010 RB
2000b003 g     O .bss	00000001 usb_configuration
60000000 g     O .text.headers	00000200 FlexSPI_NOR_Config
00000128 g     F .text.itcm	00000018 trigScanISR()
0000d6e4 g     F .text.itcm	00000062 __ratio
00004f40 g     F .text.itcm	000000cc analogWrite
60001dac  w    O .text.progmem	00000018 usb_string_manufacturer_name
00006930 g     F .text.itcm	00000010 malloc
60001d44  w    O .text.progmem	00000050 TwoWire::i2c1_hardware
000053d4  w    F .text.itcm	0000000a _fstat
0000e158 g     F .text.itcm	00000006 iswspace
00002be4  w    F .text.itcm	0000001e TwoWire::read()
0000e200 g     F .text.itcm	00000040 __assert_func
000005a0 g     F .text.itcm	0000001c setCVstart(char*)
200002a8 g     O .data	000000c8 __mprec_tens
60001aec g     F .text.code	000000e8 usb_init
00003204 g     F .text.itcm	00000006 Thread::setName(char*)
2000a8b0 g     O .bss	00000004 __malloc_top_pad
0000f46c g     F .text.itcm	0000003a __ssrefill_r
2000ae48 g     O .bss	00000004 systick_safe_read
00002c88 g     F .text.itcm	00000108 TwoWire::force_clock()
aaaaaabf g       *ABS*	00000000 _flexram_bank_config
20008634 g     O .data	00000000 .hidden __dso_handle
00004850 g     F .text.itcm	000000b8 eepromemu_flash_erase_sector
000110b4 g     F .text.itcm	0000001e .hidden __aeabi_ui2d
0000dce0 g     F .text.itcm	00000008 _localeconv_r
0000dff4 g     F .text.itcm	00000004 _strtoull_r
00010658 g     F .text.itcm	000002f4 __sfvwrite_r
0000cfe8 g     F .text.itcm	0000005c __i2b
00003244 g     F .text.itcm	00000054 ThreadController::run()
20000000 g       .data	00000000 _sdata
60001e2c g     O .text.progmem	00000062 usb_config_descriptor_480
0000664c g     F .text.itcm	000002c8 .hidden __udivmoddi4
00010e30 g     F .text.itcm	00000000 .hidden __aeabi_drsub
2000aff6 g     O .bss	00000001 revCVbias
00008910 g     F .text.itcm	00000024 _sbrk_r
60001840 g     F .text.code	00000002 startup_default_early_hook
60001648 g     F .text.code	00000028 ResetHandler
000063cc g     F .text.itcm	00000020 usb_serial_getchar
2000afd0 g     O .bss	00000008 usb_cdc_line_coding
00004564 g     F .text.itcm	00000054 digitalWrite
2000a5b0 g     O .bss	00000004 EventResponder::lastYield
000088e4 g     F .text.itcm	0000002c _read_r
00006918 g     F .text.itcm	00000010 isspace
0000d808 g     F .text.itcm	000000c6 _fclose_r
2000a8a8 g     O .bss	00000004 __malloc_max_sbrked_mem
000045dc g     F .text.itcm	00000070 pinMode
00001828 g     F .text.itcm	000003a0 Update()
00003e08 g     F .text.itcm	00000164 Print::printFloat(double, unsigned char)
000035f0 g     F .text.itcm	00000026 HardwareSerialIMXRT::available()
000110f8 g     F .text.itcm	00000042 .hidden __extendsfdf2
0000b544 g     F .text.itcm	00001850 __ssvfscanf_r
00010e3c g     F .text.itcm	00000276 .hidden __adddf3
600016a4 g     F .text.code	00000054 TwoWire::setSDA(unsigned char)
200084ec g     O .data	00000140 Wire2
6001c400 g     O .text.csf	00000c00 hab_csf
00000b68 g     F .text.itcm	000001cc AD5593init(signed char)
20280000 g       .text.csf	00000000 _heap_end
2000aff9 g     O .bss	00000001 scanAbort
0000d54c g     F .text.itcm	000000c2 __b2d
00011234 g       .ARM.exidx	00000000 __exidx_start
000053e0  w    F .text.itcm	00000004 _isatty
2000a5a4 g     O .bss	00000004 EventResponder::firstYield
000035cc  w    F .text.itcm	00000004 HardwareSerialIMXRT::operator bool()
000002d0 g     F .text.itcm	00000048 SaveSettings()
00006ee0 g     F .text.itcm	000003d8 _realloc_r
00008d18 g     F .text.itcm	00000048 __libc_init_array
000003ec g     F .text.itcm	000000a8 setVariable(float*, char*, float, float)
00002bd8  w    F .text.itcm	0000000c TwoWire::available()
200006bc g     O .data	00000030 vtable for HardwareSerialIMXRT
200007e8 g     O .data	00000100 __hexdig
000026f4 g     F .text.itcm	0000004e RB_Get(Ring_Buffer*)
20008bd8 g     O .data	00000080 isr_table_gpio1
00010ac4 g     F .text.itcm	00000066 _fputwc_r
20000280 g     O .data	00000028 __mprec_bigtens
0000ce98 g     F .text.itcm	000000b0 __s2b
000053ec  w    F .text.itcm	00000004 abort
00002ed0 g     F .text.itcm	00000160 TwoWire::requestFrom(unsigned char, unsigned char, unsigned char)
00005da0  w    F .text.itcm	00000004 usb_serial_class::clear()
000110b4 g     F .text.itcm	0000001e .hidden __floatunsidf
00005394  w    F .text.itcm	00000034 _sbrk
600130d8 g       *ABS*	00000000 _sdataload
0000d350 g     F .text.itcm	00000042 __mcmp
00004a58 g     F .text.itcm	00000104 attachInterrupt
20008630 g     O .data	00000004 __brkval
0000323c g     F .text.itcm	00000004 Thread::getInterval()
2000b002 g     O .bss	00000001 usb_cdc_line_rtsdtr
60001c28 g     F .text.code	00000000 _init
0000611c g     F .text.itcm	00000002 usb_serial_reset
00003fa8 g     F .text.itcm	0000000e String::~String()
00008324 g     F .text.itcm	0000001c strtol
00004908 g     F .text.itcm	0000012c eeprom_write_byte
000111d8 g     F .text.itcm	00000040 .hidden __aeabi_d2ulz
60001dc8 g     O .text.progmem	00000062 usb_config_descriptor_12
00000020 g     F .text.itcm	000000c0 irq_gpio6789
20000704 g     O .data	00000024 vtable for TwoWire
00001540 g     F .text.itcm	00000064 CalibrateHVaux()
000072b8 g     F .text.itcm	00000e70 _strtod_l
000097e8 g     F .text.itcm	00000036 __match
0000500c g     F .text.itcm	00000070 analogWriteFrequency
00002b7c g     F .text.itcm	00000044 PutCh(char)
2000b040 g       .bss	00000000 _ebss
00003364 g     F .text.itcm	0000000c SerialBuffer::clear()
00000790 g     F .text.itcm	00000054 stopScan()
600016f8 g     F .text.code	00000034 TwoWire::configSCLpin(unsigned char)
0000cf48 g     F .text.itcm	00000040 __hi0bits
000030e8 g     F .text.itcm	0000000c lpi2c3_isr()
20203080 g       .bss.dma	00000000 _heap_start
20007bc4 g     O .data	00000001 String::zerotermination
2000a878 g     O .bss	00000001 __lock___malloc_recursive_mutex
000005d8 g     F .text.itcm	00000068 setDuration(int)
00004eb4 g     F .text.itcm	0000008c quadtimerFrequency
000008f8 g     F .text.itcm	00000068 ProcessSerial(bool)
60001ca4  w    O .text.progmem	00000050 TwoWire::i2c4_hardware
00003fb8 g     F .text.itcm	00000066 String::copy(char const*, unsigned int)
2000a8b4 g     O .bss	00000138 __sf
00000584 g     F .text.itcm	0000001c setCValt(char*)
00000003 g       *ABS*	00000000 _itcm_block_count
200092e0 g     O .bss	00000020 endpoint0_transfer_data
000004fc g     F .text.itcm	00000018 setDuty(char*)
000050f8 g     F .text.itcm	000000f4 pwm_init
00010e3c g     F .text.itcm	00000276 .hidden __aeabi_dadd
00003fa8 g     F .text.itcm	0000000e String::~String()
6001d000 g       .text.csf	00000000 __text_csf_end
60001960 g     F .text.code	0000005c usb_pll_start
0000d1a0 g     F .text.itcm	000000c0 __pow5mult
0001113c g     F .text.itcm	0000006a .hidden __aeabi_ul2d
000030f4 g     F .text.itcm	0000000c lpi2c4_isr()
2000aa78 g     O .bss	000000f4 faims
00004b5c g     F .text.itcm	00000020 detachInterrupt
200092c0 g     O .bss	00000020 endpoint0_transfer_ack
2000afd8 g     O .bss	00000004 usb_cdc_line_rtsdtr_millis
00005d00 g     F .text.itcm	00000028 usb_transmit
000035ac g     F .text.itcm	00000020 systick_isr
00008d6c g     F .text.itcm	00000002 __retarget_lock_release_recursive
200081fc g     O .data	00000010 Serial
00003cb4 g     F .text.itcm	0000000c IRQHandler_Serial1
00001374 g     F .text.itcm	000000b4 CalibrateCV()
000020a8  w    F .text.itcm	00000006 usb_serial_class::write(unsigned char)
60001840  w    F .text.code	00000002 startup_early_hook
000026ec g     F .text.itcm	00000008 RB_Commands(Ring_Buffer*)
00006300 g     F .text.itcm	00000044 usb_serial_peekchar
00008590 g     F .text.itcm	0000000c __sfp_lock_acquire
0000e000 g     F .text.itcm	00000000 memchr
000041cc g     F .text.itcm	000002f0 set_arm_clock
000022d8 g     F .text.itcm	000000b8 SetThreadEnable(char*, char*)
2000ae40 g     O .bss	00000004 systick_cycle_count
2000afeb g     O .bss	00000001 SerialMute
2000067c g     O .data	00000018 vtable for ThreadController
20008e18 g     O .data	00000016 usb_string_serial_number_default
00008fa4 g     F .text.itcm	0000020c _free_r
0000f264 g     F .text.itcm	00000060 category
00003310 g     F .text.itcm	00000020 ThreadController::get(int)
0000887c g     F .text.itcm	0000000c __locale_mb_cur_max
20008e14 g     O .data	00000004 serial
0000e140 g     F .text.itcm	00000016 _wcsrtombs_r
00003744 g     F .text.itcm	00000068 HardwareSerialIMXRT::end()
00003b64 g     F .text.itcm	00000004 HardwareSerialIMXRT::write(unsigned char)
2000a6e4 g     O .bss	00000190 __atexit0
00005db0  w    F .text.itcm	00000004 usb_serial_class::flush()
00000e44 g     F .text.itcm	00000074 toggleCV(void*)
000020dc g     F .text.itcm	00000064 GetCommands()
0000f3ec g     F .text.itcm	00000080 _sungetc_r
00010e38 g     F .text.itcm	0000027a .hidden __aeabi_dsub
2000affc g     O .bss	00000001 toggling
2000a510 g     O .bss	00000014 Token
20008bac g     O .data	00000004 __malloc_sbrk_base
00005da8  w    F .text.itcm	00000004 usb_serial_class::read()
000021b4 g     F .text.itcm	00000124 ListThreads()
0000de54 g     F .text.itcm	00000004 _strtoll_r
0001113c g     F .text.itcm	0000006a .hidden __floatundidf
000053e4  w    F .text.itcm	00000006 _lseek
0000d260 g     F .text.itcm	000000f0 __lshift
00005cd0 g     F .text.itcm	00000030 usb_prepare_transfer
00003618 g     F .text.itcm	0000007a HardwareSerialIMXRT::peek()
00005208 g     F .text.itcm	0000018c unused_interrupt_vector
0000f2ec g     F .text.itcm	00000100 __ssprint_r
2000afdc g     O .bss	00000004 usb_timer0_callback
600019bc g     F .text.code	00000130 tempmon_init
00008e5c g     F .text.itcm	00000088 __register_exitproc
000046f0 g     F .text.itcm	00000074 eeprom_read_byte
0000878c g     F .text.itcm	0000008a strncmp
20007cf0 g     O .data	00000410 CmdArray
0000635c g     F .text.itcm	00000070 usb_serial_flush_input
0000d044 g     F .text.itcm	0000015c __multiply
00000140 g     F .text.itcm	0000000e buzzerOFF(void*)
000063ec g     F .text.itcm	0000002c usb_serial_putchar
00000024 g       *ABS*	00000000 _teensy_model_identifier
00008818 g     F .text.itcm	00000064 strncpy
00003694 g     F .text.itcm	00000092 HardwareSerialIMXRT::read()
2000a880 g     O .bss	00000028 __malloc_current_mallinfo
0000d610 g     F .text.itcm	000000d4 __d2b
0000416c g     F .text.itcm	00000060 analogReadRes
60001bd4 g     F .text.code	00000054 _reboot_Teensyduino_
60001844 g     F .text.code	00000002 startup_default_middle_hook
00006ec8 g     F .text.itcm	00000018 realloc
0000da98 g     F .text.itcm	00000004 _strtoul_r
000055d8 g     F .text.itcm	00000630 usb_isr
000088d8 g     F .text.itcm	0000000c __cxa_atexit
00008888 g     F .text.itcm	00000024 _close_r
00000d34 g     F .text.itcm	00000110 UpdateDACvalue(unsigned char, DACchan*, float*, float*, bool)
000110d4 g     F .text.itcm	00000022 .hidden __aeabi_i2d
00003234 g     F .text.itcm	00000004 Thread::onRun(void (*)())
20008cd8 g     O .data	00000080 isr_table_gpio3
20000694  w    O .data	00000028 vtable for usb_serial_class
00003f6c g     F .text.itcm	0000003a String::String(char const*)
00008d64 g     F .text.itcm	00000002 __retarget_lock_close_recursive
2000adf8 g     O .bss	00000004 scale_cpu_cycles_to_microseconds
00008340 g     F .text.itcm	00000058 sscanf
0000347c g     F .text.itcm	000000c8 SerialBuffer::flush()
0001094c g     F .text.itcm	000000cc __swsetup_r
00006914  w    F .text.itcm	00000002 .hidden __aeabi_ldiv0
0000d748 g     F .text.itcm	0000005c __copybits
200087a4 g     O .data	00000408 __malloc_av_
2000a6e0 g     O .bss	00000004 __atexit
2000abdc g     O .bss	0000021c sb
00008398 g     F .text.itcm	00000022 __sread
00006480 g     F .text.itcm	00000094 usb_serial_flush_output
00006eb0 g     F .text.itcm	0000000c __malloc_lock
20008108 g     O .data	000000f4 Rev_1_faims
00003728 g     F .text.itcm	0000001a HardwareSerialIMXRT::flush()
20009000 g     O .data	000002c0 _VectorsRam
0000dbcc g     F .text.itcm	00000054 _fflush_r
0000e3d8 g     F .text.itcm	00000078 _calloc_r
2000ab6c g     O .bss	00000004 functionPin
0000318c g     F .text.itcm	0000001c Thread::shouldRun(long)
2000b006 g     O .bss	00000001 yield_active_check_flags
00008d68 g     F .text.itcm	00000002 __retarget_lock_acquire_recursive
2000b004 g     O .bss	00000001 usb_high_speed
000086e8 g     F .text.itcm	000000a4 memset
00000150  w    F .text.itcm	00000018 Thread::~Thread()
00004b7c g     F .text.itcm	00000010 main
2000a8ac g     O .bss	00000004 __malloc_max_total_mem
00008d60 g     F .text.itcm	00000002 __retarget_lock_init_recursive
20200000 g     O .bss.dma	00000062 usb_descriptor_buffer
0000054c g     F .text.itcm	0000001c setCV(char*)
00008420 g     F .text.itcm	00000008 __sclose
2000aa60 g     O .bss	00000004 eeAddress
00005d48 g     F .text.itcm	00000058 usb_init_serialnumber
000020b0 g     F .text.itcm	0000002c DelayCommand(int)
00000530 g     F .text.itcm	0000001c setMaxI(char*)
00008320 g     F .text.itcm	00000004 _strtol_r
60001c7c g       .text.code	00000000 __init_array_end
0000e578 g     F .text.itcm	00000cec _dtoa_r
00006950 g     F .text.itcm	00000560 _malloc_r
0000dc60 g     F .text.itcm	0000001a __ascii_wctomb
0000409c g     F .text.itcm	0000000a String::toInt() const
0001114c g     F .text.itcm	0000005a .hidden __aeabi_l2d
000031d0 g     F .text.itcm	00000034 Thread::Thread(void (*)(), long)
000105e0 g     F .text.itcm	00000076 __submore
00003100 g     F .text.itcm	00000078 TwoWire::setClock(unsigned long)
00008f04 g     F .text.itcm	000000a0 _malloc_trim_r
00010b2c g     F .text.itcm	00000106 _wcsnrtombs_l
00000364 g     F .text.itcm	0000004c RestoreSettings()
00006418 g     F .text.itcm	00000018 usb_serial_write
60001dc4 g     O .text.progmem	00000004 string0
60001848  w    F .text.code	00000002 startup_late_hook
00004dd8 g     F .text.itcm	000000dc flexpwmFrequency
00005dac  w    F .text.itcm	00000004 usb_serial_class::available()
00008988 g     F .text.itcm	000002dc strcmp
000033c0 g     F .text.itcm	00000006 SerialBuffer::available()
20000000 g     O .data	00000280 endpoint_queue_head
60001d94  w    O .text.progmem	00000016 usb_string_product_name
200006ec g     O .data	00000018 vtable for Thread
000044bc g     F .text.itcm	000000a8 delay
000111d8 g     F .text.itcm	00000040 .hidden __fixunsdfdi
000031a8 g     F .text.itcm	00000028 Thread::run()
00011230 g     F .fini	00000000 _fini
00004020 g     F .text.itcm	00000022 String::operator=(char const*)
00002c20 g     F .text.itcm	0000002a TwoWire::write(unsigned char)
60001020 g     O .text.headers	0000000c BootData
2000a4c8 g     O .bss	00000014 Sarg2
0000dc20 g     F .text.itcm	00000040 sprintf
00003d90 g     F .text.itcm	00000016 Print::print(long)
000053f0 g     F .text.itcm	00000004 Panic_Temp_isr
000111a8 g     F .text.itcm	00000030 .hidden __fixdfdi
00008138 g     F .text.itcm	000000a4 strtof
00010c34 g     F .text.itcm	00000024 _wcsnrtombs_r
20007cec g     O .data	00000004 ACKonlyString2
0000320c g     F .text.itcm	00000010 Thread::getName()
00008934 g     F .text.itcm	0000002c _write_r
0000e160 g     F .text.itcm	00000028 iswspace_l
000051ec g     F .text.itcm	0000001c analogWriteRes
2000afec g     O .bss	00000001 Tptr
00003f6c g     F .text.itcm	0000003a String::String(char const*)
00008ef8 g     F .text.itcm	0000000c nanf
20008bc0 g     O .data	00000004 _impure_ptr
00003370 g     F .text.itcm	0000004e SerialBuffer::write(unsigned char)
0000da9c g     F .text.itcm	00000130 __sflush_r
00000568 g     F .text.itcm	0000001c setBias(char*)
0000e0a0 g     F .text.itcm	00000054 _mbrtowc_r
2000826c g     O .data	00000140 Wire
00000eb8 g     F .text.itcm	000000bc scanCV(void*)
000085a8 g     F .text.itcm	00000046 _fwalk_sglue
000014dc g     F .text.itcm	00000064 CalibrateHV()
60001c70 g       .text.code	00000000 __preinit_array_end
00002000 g     F .text.itcm	000000a8 enableWarning(void*)
00003188 g     F .text.itcm	00000004 Thread::setNextRunTime(long)
000099d0 g     F .text.itcm	0000002a __ascii_mbtowc
0000d4e8 g     F .text.itcm	00000064 __ulp
000055ac g     F .text.itcm	0000002c usb_stop_sof_interrupts
00002c04  w    F .text.itcm	00000018 TwoWire::peek()
00002c1c  w    F .text.itcm	00000002 TwoWire::flush()
00001bc8 g     F .text.itcm	000001b0 setup
20007b20 g     O .data	00000084 usb_descriptor_list
60001c7c g     O .text.progmem	00000025 Version
00003240 g     F .text.itcm	00000004 Thread::runTimeMs()
00003298 g     F .text.itcm	00000030 ThreadController::ThreadController(long)
00008ee8 g     F .text.itcm	00000010 nan
000032c8 g     F .text.itcm	00000046 ThreadController::add(Thread*)
20068000 g       .text.csf	00000000 _estack
00006430 g     F .text.itcm	00000050 usb_serial_write_buffer_free
0000dc7c g     F .text.itcm	00000064 stpncpy
6000172c g     F .text.code	00000058 TwoWire::setSCL(unsigned char)
20008bb4 g     O .data	0000000c __sglue
00006120 g     F .text.itcm	00000100 usb_serial_configure
00002c4c g     F .text.itcm	0000003c TwoWire::write(unsigned char const*, unsigned int)
00003dc4  w    F .text.itcm	0000001c _write
200092c0 g       .data	00000000 _edata
2000948c g     O .bss	00000004 CVmon
00010a18 g     F .text.itcm	000000aa __fputwc
000031d0 g     F .text.itcm	00000034 Thread::Thread(void (*)(), long)
000005bc g     F .text.itcm	0000001c setCVstop(char*)
00005db4  w    F .text.itcm	00000004 usb_serial_class::availableForWrite()
000003b0 g     F .text.itcm	0000003c FormatFLASH()
00000f74 g     F .text.itcm	00000238 CalibratePoint(unsigned char, DACchan*, ADCchan*, float*)
000030dc g     F .text.itcm	0000000c lpi2c1_isr()
20000654 g     O .data	00000028 vtable for SerialBuffer
00003a48 g     F .text.itcm	00000040 nvic_execution_priority()
20008d58 g     O .data	00000080 isr_table_gpio4
00004cc0 g     F .text.itcm	00000062 ultoa
60001784 g     F .text.code	00000068 TwoWire::begin()
2000aff4 g     O .bss	00000001 echoMode
000040a8 g     F .text.itcm	00000014 String::toFloat() const
000083c0 g     F .text.itcm	0000003e __swrite
00003564 g     F .text.itcm	00000044 EventResponder::runFromInterrupt()
00003238 g     F .text.itcm	00000004 Thread::getID()
20008bb0 g     O .data	00000004 __malloc_trim_threshold
00005da4  w    F .text.itcm	00000004 usb_serial_class::peek()
2000ab94 g     O .bss	00000004 returnI
0000f2c4 g     F .text.itcm	00000028 fiprintf
0000f5d4 g     F .text.itcm	00000f8c _vfiprintf_r
0000d394 g     F .text.itcm	00000154 __mdiff
00000874 g     F .text.itcm	00000006 bootLoader()
00000514 g     F .text.itcm	0000001c setVoltage(char*)
20007bc8 g     O .data	00000120 _impure_data
0000e374 g     F .text.itcm	00000064 _jp2uc_l
000009cc g     F .text.itcm	0000019c UpdateADCvalue(unsigned char, ADCchan*, float*, float)
0000859c g     F .text.itcm	0000000c __sfp_lock_release
0000d8d0 g     F .text.itcm	00000088 __sccl
20000954 g     O .data	00000101 _ctype_
000033c8 g     F .text.itcm	00000036 SerialBuffer::read()
000053c8  w    F .text.itcm	00000004 _read
60001c70 g       .text.code	00000000 __init_array_start
00006914  w    F .text.itcm	00000002 .hidden __aeabi_idiv0
00000960 g     F .text.itcm	0000006c AD5593readWord(unsigned char, unsigned char)
00003330 g     F .text.itcm	00000032 ThreadController::get(char const*)
000040bc g     F .text.itcm	000000b0 analogRead
20008100 g     O .data	00000004 F_BUS_ACTUAL
000023fc g     F .text.itcm	000002f0 ExecuteCommand(Commands*, int, int, char*, char*, float)
2000781c g     O .data	0000001c pin_to_channel
00000640 g     F .text.itcm	0000001c setLoadC(char*)
000011ac g     F .text.itcm	000001c8 Calibrate(unsigned char, DACchan*, ADCchan*, float, float)
00003404 g     F .text.itcm	00000076 SerialBuffer::write(unsigned char const*, unsigned int)
00010c58 g     F .text.itcm	000000d8 __smakebuf_r
00000000 g       .text.itcm	00000000 _stext
00003400 g     F .text.itcm	00000004 SerialBuffer::peek()
00008d80 g     F .text.itcm	000000dc strlen
2000a4b4 g     O .bss	00000014 Sarg1
00009254 g     F .text.itcm	00000594 __gethex
60001d94 g     O .text.progmem	00000016 usb_string_product_name_default
00003560 g     F .text.itcm	00000002 SerialBuffer::~SerialBuffer()
20009490 g     O .bss	00000004 ErrorCode
000035d0 g     F .text.itcm	00000020 HardwareSerialIMXRT::availableForWrite()
60001844  w    F .text.code	00000002 startup_middle_hook
000110f8 g     F .text.itcm	00000042 .hidden __aeabi_f2d
60001850 g     F .text.code	00000110 configure_cache
00004a34 g     F .text.itcm	0000001e eeprom_write_block
2000ae38 g     O .bss	00000004 startTime
00003560 g     F .text.itcm	00000002 SerialBuffer::~SerialBuffer()
2000afea g     O .bss	00000001 CVstate
00010e38 g     F .text.itcm	0000027a .hidden __subdf3
2000a4e0 g     O .bss	00000030 SystemThread
60001c70 g       .text.code	00000000 __preinit_array_start
00005d28 g     F .text.itcm	0000001c usb_receive
00003178 g     F .text.itcm	0000000e Thread::setInterval(long)
0000cf88 g     F .text.itcm	00000060 __lo0bits
00000860 g     F .text.itcm	00000002 Debug(int)
0001d000 g       *ABS*	00000000 _flashimagelen
00006610 g     F .text.itcm	0000000a __aeabi_atexit
000065ec g     F .text.itcm	00000024 rtc_get
0000e188 g     F .text.itcm	00000078 frexp
000035a8 g     F .text.itcm	00000004 pendablesrvreq_isr
00002818 g     F .text.itcm	00000364 ProcessCommand()
00002bd4  w    F .text.itcm	00000004 Print::availableForWrite()
20008638 g     O .data	0000016c __global_locale
00006220 g     F .text.itcm	000000e0 usb_serial_read
2000a87c g     O .bss	00000001 __lock___sfp_recursive_mutex
00003de0 g     F .text.itcm	00000028 Print::printNumber(unsigned long, unsigned char, unsigned char)
00005c6c g     F .text.itcm	00000064 usb_config_tx
000053cc  w    F .text.itcm	00000006 _close
00006940 g     F .text.itcm	00000010 free
000015a4 g     F .text.itcm	00000140 CalibrateHVI()
0000cdf4 g     F .text.itcm	000000a4 __multadd
00000494 g     F .text.itcm	00000068 setFrequency(int)
0000cde0 g     F .text.itcm	00000012 _Bfree
20008e18  w    O .data	00000016 usb_string_serial_number


